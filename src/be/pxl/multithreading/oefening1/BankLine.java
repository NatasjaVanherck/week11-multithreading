package be.pxl.multithreading.oefening1;import java.util.LinkedList;import java.util.Queue;public class BankLine {	private long myTotalWaitTime;	private int myCustomersServed;	private double averageWaitTime;	private Queue<Customer> theLine;	private String myName;	public BankLine(String name){		myName = name;		theLine = new LinkedList<>();		myTotalWaitTime = 0;		myCustomersServed = 0;	}		public int customersInLine(){		return theLine.size();	}		public int myCustomersServed(){		return myCustomersServed;	}		public double totalWaitTime(){		return myTotalWaitTime;	}		public double averageWaitTime(){		averageWaitTime = (double) myTotalWaitTime/myCustomersServed;		return averageWaitTime;	}	/*****************************************************************	 * addCustomer - adds a customer to the line	 *****************************************************************/	public synchronized void addCustomer(Customer newCustomer){		// add customer to line		// make sure the customer starts counting his time in the line		theLine.offer(newCustomer);		newCustomer.inLine();		System.out.println("Customer " + newCustomer.getName() 						+ " was added to line " + myName);	}			/*****************************************************************	 * provideCustomer - gets the first customer in line	 *****************************************************************/	public synchronized Customer provideCustomer(){		//get the first customer in the line		// make sure you update myCustomersServed and myTotalWaitTime				Customer nextCustomer = theLine.poll();		if(nextCustomer != null){			myCustomersServed++;			myTotalWaitTime += nextCustomer.outOfLine();		}		return nextCustomer;	}			/*****************************************************************	 * toString - provide a report on the line	 *****************************************************************/	public String toString(){		return "Bank Line - waiting currently: " + theLine.size() 		   + "\n             customers served: " + myCustomersServed 		   + "\n            average wait time: " + averageWaitTime();			}	}